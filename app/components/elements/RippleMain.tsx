'use client'
import { useEffect, useRef } from "react";

export const RippleMain: React.FC = () => {
  const svgRef = useRef<SVGSVGElement>(null);

  useEffect(() => {
    const paths = svgRef.current?.querySelectorAll('path');
    console.log('SVG Paths:', paths);
    if (!paths) return;

    paths.forEach((path, index) => {
      const length = path.getTotalLength();

      path.style.strokeDasharray = `${length}`;
      path.style.strokeDashoffset = `${length}`;
      path.style.animation = `drawPath 3s ease-in-out ${index * 0.4}s forwards`;
    });
  }, []);


  return (
    <div className="absolute top-center right-0 w-[400px] h-[400px]">
      <style jsx global>{`
        @keyframes drawPath {
          to {
            stroke-dashoffset: 0;
          }
        }
      `}</style>
      <svg width="400" height="400" viewBox="0 0 400 400" fill="none" className="w-full h-full [&>path]:fill-none [&>path]:stroke-[#eaeaea] [&>path]:stroke-[1px]" ref={svgRef}>
        <path d="M399.5 200C399.5 153.845 383.496 109.117 354.216 73.4385C324.935 37.76 284.189 13.3378 238.921 4.33334C193.652 -4.67113 146.662 2.29921 105.956 24.0567C65.251 45.8142 33.3489 81.0126 15.686 123.655C-1.97686 166.297 -4.3078 213.744 9.0904 257.912C22.4886 302.08 50.7869 340.236 89.1637 365.878C127.541 391.521 173.621 403.063 219.554 398.539C265.488 394.015 308.431 373.705 341.068 341.068"/>
        <path d="M244.076 363.931C278.652 354.667 309.406 334.694 331.933 306.876C354.459 279.059 367.601 244.823 369.474 209.078C371.348 173.332 361.857 137.91 342.361 107.89C322.866 77.8702 294.367 54.7925 260.95 41.9647C227.533 29.137 190.912 27.2178 156.337 36.4822C121.762 45.7466 91.0068 65.719 68.4804 93.5368C45.9539 121.355 32.8123 155.59 30.9389 191.336C29.0656 227.082 38.5567 262.503 58.052 292.523"/>
        <path d="M339.964 200.464C339.964 171.005 330.638 142.301 313.322 118.468C296.006 94.635 271.59 76.8954 243.572 67.7919C215.555 58.6884 185.374 58.6884 157.356 67.7919C129.339 76.8954 104.922 94.635 87.6064 118.468C70.2906 142.301 60.9643 171.005 60.9643 200.464C60.9643 229.924 70.2906 258.627 87.6064 282.46C104.922 306.294 129.339 324.033 157.356 333.137C185.374 342.24 215.555 342.24 243.572 333.137"/>
        <path d="M220.014 92.1635C198.686 88.4028 176.722 91.0511 156.899 99.7734C137.076 108.496 120.285 122.9 108.648 141.166C97.0122 159.431 91.0535 180.737 91.5259 202.389C91.9984 224.041 98.8807 245.066 111.303 262.807C123.725 280.547 141.128 294.206 161.313 302.055C181.497 309.904 203.556 311.592 224.7 306.904C245.844 302.217 265.123 291.365 280.099 275.721C295.075 260.076 305.076 240.342 308.836 219.014"/>
        <path d="M127.625 233.275C135.172 249.459 147.947 262.631 163.894 270.668C179.84 278.706 198.027 281.141 215.526 277.581C233.025 274.02 248.815 264.673 260.353 251.043C271.891 237.414 278.505 220.297 279.128 202.451C279.751 184.605 274.348 167.068 263.789 152.667C253.23 138.267 238.13 127.84 220.922 123.068C203.714 118.296 185.401 119.456 168.933 126.362C152.465 133.267 138.802 145.516 130.144 161.134"/>
        <path d="M191.851 151.698C182.861 153.284 174.484 157.324 167.647 163.373C160.81 169.422 155.778 177.244 153.109 185.974C150.44 194.704 150.237 204.002 152.523 212.84C154.809 221.678 159.494 229.712 166.061 236.054C172.628 242.395 180.82 246.797 189.733 248.773C198.645 250.749 207.93 250.222 216.562 247.249C225.194 244.277 232.835 238.976 238.642 231.932C244.448 224.888 248.194 216.375 249.465 207.335"/>
        <path d="M197.783 180.965C193.211 181.772 189.076 184.183 186.122 187.766C183.169 191.348 181.591 195.867 181.672 200.509C181.753 205.152 183.488 209.613 186.565 213.09C189.641 216.568 193.857 218.833 198.455 219.479C203.053 220.126 207.731 219.11 211.646 216.615C215.562 214.121 218.46 210.31 219.817 205.87C221.175 201.43 220.903 196.651 219.052 192.394C217.2 188.136 213.89 184.678 209.717 182.643"/>
      </svg>
    </div>
  )
}